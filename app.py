 #-*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1prLY0UZy5jcPu8XXglBqUSxwfzShtAlG
"""

#Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
 
import streamlit as st
import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import StandardScaler

st.set_page_config(page_title="Diyabet Tahmini", layout="centered")
st.title("Diyabet Tahmin Uygulaması")
# 
# # 1️⃣ Kullanıcıdan veri al
age = st.slider("Yaş", 0, 130, 25)
bmi = st.slider("Vücut Kitle İndeksiniz (BMI)", 10.0, 60.0, 25.0)
high_bp = st.radio("Yüksek tansiyonunuz var mı?", ["Evet", "Hayır"])
smoker = st.radio("Sigara kullanıyor musunuz?", ["Evet", "Hayır"])
gen_health = st.selectbox("Genel sağlık durumunuz (1=Çok iyi, 5=Çok kötü)", [1, 2, 3, 4, 5])
sex = st.radio("Cinsiyetiniz", ["Kadın", "Erkek"])

# # 2️⃣ Girdileri sayısal verilere dönüştür
data = {
   'HighBP': 1 if high_bp == "Evet" else 0,
   'BMI': bmi,
   'Smoker': 1 if smoker == "Evet" else 0,
   'GenHlth': gen_health,
   'Sex': 1 if sex == "Erkek" else 0,
   'Age': age
 }

X_input = pd.DataFrame([data])  # Tek satırlık dataframe oluştur
 
# # 3️⃣ Eğitim verisiyle modeli eğit
df = pd.read_csv("diabetes_binary_5050split_health_indicators_BRFSS2015.csv")

selected_features = ['HighBP', 'BMI', 'Smoker', 'GenHlth', 'Sex', 'Age']
X = df[selected_features]
y = df['Diabetes_binary']
 
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

model = RandomForestClassifier(n_estimators=100, max_depth=10)
model.fit(X_scaled, y)

# # 4️⃣ Tahmin yap
X_input_scaled = scaler.transform(X_input)
prediction = model.predict(X_input_scaled)
# 
# # 5️⃣ Sonucu göster
if st.button("Tahmin Et"):
  if prediction[0] == 1:
     st.error("⚠️ Diyabet riski mevcut!")
  else:
     st.success("✅ Diyabet riski görünmüyor.")
